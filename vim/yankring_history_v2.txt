alias lh="ls -d .*",V
g,v
# Color output--color=auto,V
,V
Loads for all login shells. Sets path variable and others,v
10/29/13,v
bash_profile,v
# Set vim syntax: vim:ft=sh syntax=sh#==============================================================================#    File: ~/.bash_profile# Created: 10/29/13#  Author: Bernie Roesler## Description: Loads for all login shells. Sets path variable and others#==============================================================================,V
Thanks\ for\ flying\ Vim\!\,v
(25ยบ:5ยบ:40ยบ),v
    " let &titleold="Thanks for flying Vim!"    " set title,V
bash,v
&,v
" Automatically change Terminal's titlebar to filenameautocmd BufEnter * let &titlestring = expand("%:p"),V
 . "]",v
"vim[" . ,v
keyword changes,v
"--------------------------------------- ,v
",V
setlocal omnifunc=csscomplete#CompleteCSS,v
autocmd FileType css      ,v
let g:html_indent_tags = 'li\|p',V
HTML Settings,v
"------------------------------------------------------------------------------"       HTML Settings"------------------------------------------------------------------------------" Treat <li> and <p> tags like the block tags they arelet g:html_indent_tags = 'li\|p'setlocal tabstop=2setlocal softtabstop=2setlocal shiftwidth=2" Allow stylesheets to autocomplete hyphenated wordssetlocal iskeyword+=-,_setlocal iskeyword-=:,V
set tabstop=4       " tabs every 4 spacesset softtabstop=4   " let backspace delete indentset shiftwidth=2    " lines >> 2 spaces, use >>. for 4, etc.,V
setlocal expandtab,V
 tabstop=2,v
autocmd FileType css,html ,v
"--------------------------------------- HTML/CSS,V
"--------------------------------------- HTML/CSS" Treat <li> and <p> tags like the block tags they arelet g:html_indent_tags = 'li\|p'autocmd FileType css,html setlocal shiftwidth=2 tabstop=2" Allow stylesheets to autocomplete hyphenated wordsautocmd FileType css,html setlocal iskeyword+=-,_autocmd FileType css,html setlocal iskeyword-=:,V
Local key mappings,v
let g:yankring_history_dir='~/.vim'" Use \yr 2 to get YankRing element 2, for examplennoremap <silent> <Leader>yr :YRGetElem<CR>,V
let g:yankring_history_dir='~/.vim',V
,V
,c,f95,,v
autocmd FileType c ,v
"--------------------------------------- C,V
"--------------------------------------- Cautocmd FileType c setlocal iskeyword+=_autocmd FileType c set cindent,V
Do not,v
NONE,v
                            ,v
                             ,v
au! BufRead,BufNewFile *.f9? ,v
autocmd FileType fortran ,v
"--------------------------------------- Fortran options,V
"--------------------------------------- Fortran optionsautocmd FileType fortran setlocal iskeyword+=_let fortran_free_source=1                               " Enable free formatlet fortran_more_precise=1                              " more precise syntaxau! BufRead,BufNewFile *.f9? let b:fortran_do_enddo=1   " indent do loops" Do not highlight tabs in fortran fileshi link fortranTab NONE,V
setlocal iskeyword+=_,V
" 21 == light blue,V
autocmd FileType text ,v
"--------------------------------------- plain text,V
"--------------------------------------- plain textautocmd FileType text syn match Braces display '[{}\[\]]'autocmd FileType text hi Braces ctermfg=darkredautocmd FileType text syn match Quotes display '[\'\`\"]'autocmd FileType text hi Quotes ctermfg=6" 21 == light blueautocmd FileType text syn match Stars display '[\*]'autocmd FileType text hi Stars ctermfg=208" set complete to include dictionary for text or latex filesautocmd FileType text set complete+=k,V
autocmd FileType matlab,c,f95,sh,markdown set iskeyword+=_,V
"--------------------------------------- LaTeX,V
autocmd FileType tex,V
,matlab,c,f95,sh,markdown set iskeyword+=_,v
,tex,v
tex,,v
autocmd FileType tex,matlab,c,f95,sh,markdown set iskeyword+=_,V
,V
"------------------------------------------------------------------------------"       Local key mappings"------------------------------------------------------------------------------,V
let g:tex_stylish=1" wrap \left( \right) around visually selected textvmap sp "zdi\left(<C-R>z\right)<Esc> " " Declare latex language for ctags, taglist.vim usage" let tlist_tex_settings   = 'latex;s:sections;g:graphics;l:labels'" let tlist_bib_settings   = 'bibtex;s:BiBTeX_strings;e:BibTeX-Entries;a:BibTeX-Authors;t:BibTeX-Titles'" let tlist_make_settings  = 'make;m:macros;t:targets'" : is included as keyword for fig: eqn: etc.,autocmd FileType tex,matlab,c,f95,sh,markdown set iskeyword+=_" Turn off matching paren highlighting for LaTeX files" Doesn't work...let g:LatexBox_loaded_matchparen=1" Change default SuperTabs completion to context (or try <C-x><C-o>)let g:SuperTabDefaultCompletionType="context",V
nnoremap ,t :TagbarToggle<CR>,V
"--------------------------------------- TAGS options,V
		,v
 		,v
LaTeX-specific Functions,v
"------------------------------------------------------------------------------"       LaTeX-specific Functions"------------------------------------------------------------------------------,V
	imap <buffer> [[ 		\begin{	imap <buffer> ]]		<Plug>LatexCloseCurEnv,V
<buffer>,v
"------------------------------------------------------------------------------,V
"------------------------------------------------------------------------------" make current .tex filefunction! LatexMakeOnce()  let fileext = expand("%:e")  if (fileext ==# "tex")    write                               " save file    lcd %:p:h                           " cd to that of tex file    let fileroot = expand("%:r")    silent execute "!pdflatex " . fileroot  else    echom "FileType is NOT .tex! Aborted pdflatex."  endifendfunctionnnoremap <Leader>T :call LatexMakeOnce()<CR>" make current .tex file properlyfunction! LatexMakeFull()  let fileext = expand("%:e")  if (fileext ==# "tex")    write    lcd %:p:h    let fileroot = expand("%:r")    silent execute "!makepdf " . fileroot  else    echom "FileType is NOT .tex! Aborted pdflatex."  endifendfunctionnnoremap <Leader>F :call LatexMakeFull()<CR>" make current .tex file properlyfunction! LatexMakeBib()  let fileext = expand("%:e")  if (fileext ==# "tex")    write    lcd %:p:h    let fileroot = expand("%:r")    silent execute "!makepdfbib " . fileroot  else    echom "FileType is NOT .tex! Aborted pdflatex."  endifendfunctionnnoremap <Leader>B :call LatexMakeBib()<CR>,V
:,v
silent ,v
:let fortran_more_precise=1,v
!,v
\,v
\<CR>,v
ent ,v
sil,v
autocmd BufEnter * let &titlestring = "vim[" . expand("%:p") . "]",V
function! ResetTitle()    " disable vim's ability to set the title    exec "set title t_ts='' t_fs=''"    " and restore it to 'bash'    exec ":!echo -e '\033kbash\033\\'\<CR>"endfunctionau VimLeave * silent call ResetTitle(),v
let &titlestring = "vim[" . expand("%:p") . "]",V
" Set terminal title the hard way...function! SetTermTitle()  let tstr = expand("%:p")  silent execute "!echo -n -e " . "\"\033]0;" . tstr . "\007\""endfunctionautocmd BufEnter * call SetTermTitle(),V
,,v
html,v
,scss,sass,v
,sass,v
,scss,v
<CR>,v
function,v
"\033]0;,v
=,v
 ,v
= "vim[" . expand("%:p") . "]",v
  },V
a,v
if &term == "screen-256color"  set t_ts=^[k  set t_fs=^[\endifif &term == "screen-256color" || &term == "xterm-256color"  set titleendif,V
set,v
titlestring = "vim[" . expand("%:p") . "]",v
-256color,v
